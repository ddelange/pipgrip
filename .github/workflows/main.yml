name: GH

on:
  pull_request:
    branches: "*"
  push:
    branches: "master"
    tags: "*"

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 8
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pip cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/ci.txt
        pip install -e .

    - name: Lint
      run: make lint

    - name: Test
      run: make test

    - name: Codecov
      if: matrix.python-version == 3.8
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        pip install codecov
        codecov

  CD:
    needs: CI
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: PyPi Deploy preparation
      run: |
        pip install --upgrade setuptools wheel
        python setup.py sdist bdist_wheel --universal

    - name: PyPi Deploy
      uses: pypa/gh-action-pypi-publish@v1.0.0a0
      with:
        user: ${{ secrets.PYPI_USER }}
        password: ${{ secrets.PYPI_PASSWORD }}

    # - name: Docker image build and deploy
    #   # GITHUB_TOKEN should be less than 60mins old at this point
    #   run: |
    #     DOCKER_IMAGE_PATH="./Dockerfile"
    #     DOCKER_IMAGE_TAG="${GITHUB_REF##refs/tags/}"
    #     DOCKER_IMAGE_NAME="docker.pkg.github.com/$GITHUB_REPOSITORY/$(basename $GITHUB_REPOSITORY):$DOCKER_IMAGE_TAG"
    #     test -f $DOCKER_IMAGE_PATH || { echo "Dockerfile '$DOCKER_IMAGE_PATH' not found" && exit 1; }
    #     echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
    #     docker build . -f $DOCKER_IMAGE_PATH -t $DOCKER_IMAGE_NAME --build-arg PIP_INDEX_URL=$PIP_INDEX_URL --build-arg PIP_EXTRA_INDEX_URL=$PIP_EXTRA_INDEX_URL
    #     docker images
    #     docker push $DOCKER_IMAGE_NAME
